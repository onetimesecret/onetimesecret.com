---
// Component imports
import LanguagePicker from "@/components/LanguagePicker.astro";
import FooterLinkLists from "@/components/vue/layouts/FooterLinkLists.vue";
import FooterSignOff from "@/components/vue/layouts/FooterSignOff.vue";
import Favicons from "@/components/layout/Favicons.astro";
import SeoMeta from "@/components/layout/SeoMeta.astro";
import SvgSprites from "@/components/layout/SvgSprites.astro";

// Utilities
import { getLocaleFromUrl } from "../i18n/utils";
import { generateCspConnectSrc } from "@/utils/security";
import {
  getRouteSeoConfig,
  generateBreadcrumbsLd,
  defaultSeoValues,
  getDefaultWebApplicationLd,
} from "@/utils/seo";

// Styles
import "@/fonts/font-face.css";
import "@/styles/global.css";
import "@/styles/tailwind.css";

// i18n setup
const locale = getLocaleFromUrl(Astro.url);
const { lang = "en" } = Astro.params;

// Routing
const currentPath = Astro.url.pathname;

// --------------------------
// Props Interface
// --------------------------

export interface Props {
  title?: string;
  description?: string;
  canonicalUrl?: string;
  ogImage?: string;
  ogType?: string;
  twitterCard?: string;
  keywords?: string;
  noindex?: boolean; // Allow explicitly setting noindex
  alternateLanguages?: { code: string; url: string }[];
  structuredData?: object;
}

// --------------------------
// Configuration & Data Processing
// --------------------------

const siteOrigin = Astro.url.origin.toString();

// SEO Configuration
const routeSpecificSeo = getRouteSeoConfig(currentPath, siteOrigin);

const pageTitle =
  Astro.props.title || routeSpecificSeo.title || defaultSeoValues.title;
const pageDescription =
  Astro.props.description ||
  routeSpecificSeo.description ||
  defaultSeoValues.description;
const pageOgImage =
  Astro.props.ogImage || routeSpecificSeo.ogImage || defaultSeoValues.ogImage;
const pageOgType =
  Astro.props.ogType || routeSpecificSeo.ogType || defaultSeoValues.ogType;
const pageKeywords = Astro.props.keywords || defaultSeoValues.keywords;
const pageCanonicalUrl = Astro.props.canonicalUrl || Astro.url.href;
const pageTwitterCard = Astro.props.twitterCard || defaultSeoValues.twitterCard;

// Determine noindex status: explicitly set via prop, or based on path conventions
const pageNoindex =
  Astro.props.noindex !== undefined
    ? Astro.props.noindex
    : currentPath.startsWith("/secret/") ||
      currentPath.startsWith("/private/") ||
      currentPath.startsWith("/receipt/");

const pageAlternateLanguages = Astro.props.alternateLanguages || [
  { code: "en", url: `${siteOrigin}/en${Astro.url.pathname}` }, // ensure pathname starts with /
];

// Structured Data
const pageStructuredData =
  Astro.props.structuredData ||
  routeSpecificSeo.structuredData ||
  getDefaultWebApplicationLd(siteOrigin, pageDescription);

const pageBreadcrumbsLd = generateBreadcrumbsLd(currentPath, siteOrigin);

// Security Configuration
const apiUrl = import.meta.env.PUBLIC_API_BASE_URL;
const isDebugMode = import.meta.env.DEV || import.meta.env.DEBUG;
const connectSrcDirective = generateCspConnectSrc(apiUrl, isDebugMode);
---

<!doctype html>
<html
  lang={locale}
  class="h-full">
  <head>
    <meta charset="utf-8" />
    <meta
      http-equiv="Content-Type"
      content="text/html; charset=utf-8"
    />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
    <meta
      name="color-scheme"
      content="dark light"
    />
    <meta
      name="author"
      content="Onetime Secret"
    />

    <!-- Favicons and Web App Manifest -->
    <Favicons />

    <!-- SEO Meta Tags (including Open Graph, Twitter, JSON-LD, etc.) -->
    <SeoMeta
      title={pageTitle}
      description={pageDescription}
      canonicalUrl={pageCanonicalUrl}
      ogImageBaseUrl={siteOrigin}
      ogImage={pageOgImage}
      ogType={pageOgType}
      twitterCard={pageTwitterCard}
      keywords={pageKeywords}
      noindex={pageNoindex}
      alternateLanguages={pageAlternateLanguages}
      structuredData={pageStructuredData}
      breadcrumbsLd={pageBreadcrumbsLd}
    />

    <!-- Default alternate language link -->
    <link
      rel="alternate"
      hreflang="x-default"
      href={siteOrigin + Astro.url.pathname}
    />

    <!-- Preload critical resources -->
    <!-- TODO: Fonts -->

    <!-- Security Headers -->
    <meta
      http-equiv="Content-Security-Policy"
      content={`default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src ${connectSrcDirective}; worker-src 'self' blob:;`}
    />

    <title>{pageTitle}</title>
  </head>
  <body class="flex h-full flex-col bg-white dark:bg-gray-900">
    <!-- Site-wide progress indicator -->
    <div class="bg-brand-500 fixed top-0 left-0 z-50 h-1 w-full"></div>

    <!-- Main content area -->
    <div class="flex-grow">
      <slot />
    </div>

    <!-- Footer section -->
    <footer class="bg-white dark:bg-gray-900">
      <FooterLinkLists
        client:load
        locale={lang}
      />
      <LanguagePicker />
      <FooterSignOff client:load />
    </footer>
  </body><!-- SVG sprites - hidden but available for use -->
  <SvgSprites />
</html>
