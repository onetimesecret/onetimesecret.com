---
/**
 * src/pages/[lang]/about.astro
 * About page implementation using content collections
 */
import { getCollection } from "astro:content";
import MainLayout from "@/layouts/MainLayout.astro";
import { getLanguagePaths, type SupportedLanguage } from "@/i18n";
import { DEFAULT_LANGUAGE } from "@config/astro/i18n";
import { createLocaleI18n } from "@/i18n";
import enMessages from "@/i18n/ui/en.json";
import type { MessageSchema } from "@/i18n";

export async function getStaticPaths() {
  return getLanguagePaths();
}

const { lang = DEFAULT_LANGUAGE } = Astro.params as { lang: SupportedLanguage };

// Setup initial messages for i18n
const initialMessages = {
  [DEFAULT_LANGUAGE]: enMessages as MessageSchema,
};

// Initialize i18n for page content
const pageI18n = await createLocaleI18n(lang, initialMessages);
const t = pageI18n.global.t;

// Get the page by language/slug using Astro content collection API
const allPages = await getCollection("pages");
const page = allPages.find(
  (page) =>
    page.id === `${lang}/about.md` ||
    (lang !== DEFAULT_LANGUAGE && page.id === `${DEFAULT_LANGUAGE}/about.md`),
);

if (!page) {
  throw new Error(`Page not found: ${lang}/about.md`);
}

// Render the content
const renderedContent = await page.render();
const { Content } = renderedContent;
---

<MainLayout
  title={`${page.data.title} | Onetime Secret`}
  description={page.data.description || `${page.data.title} | Onetime Secret`}
  htmlLang={lang}
  initialMessages={initialMessages}
  showHero={true}
  heroTitle={page.data.title}
  heroDescription={page.data.description}
>
  <div class="prose prose-lg mx-auto dark:prose-invert">
    <Content />
  </div>
</MainLayout>
