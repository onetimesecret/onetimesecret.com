---
// src/pages/[lang]/about.astro

import Layout from "@/layouts/Layout.astro";
import { createLocaleI18n, type MessageSchema } from "@/i18n"; // For page SSR
import { loadLocalizedPage } from "@/utils/content";
import { type SupportedLanguage } from "@config/astro/i18n"; // For getStaticPaths
import { getLanguagePaths } from "@/i18n";

export async function getStaticPaths() {
  // getLanguagePaths is now async and provides initialMessages in props
  return getLanguagePaths();
}

interface Props {
  lang: SupportedLanguage;
  initialMessages: Record<string, MessageSchema>; // From getStaticPaths
  langMeta: {
    name: string;
    locale: string;
    dir: string;
  };
  // now: number; // if needed from getStaticPaths
}

const { lang, initialMessages, langMeta } = Astro.props;

// Initialize i18n for page SSR content (e.g., title, description)
const i18n = await createLocaleI18n(lang, initialMessages);
// const { t } = i18n.global; // if you need t directly for this page

// Use the utility function to load content (assuming this remains unchanged)
const { Content, headings, data } = await loadLocalizedPage(
  "pages",
  lang,
  "about",
);
---

<Layout
  title={`${data.title} | Onetime Secret`}
  description={data.description ||
    "Learn about Onetime Secret, our mission to provide secure one-time sharing, and the team behind our service."}
  htmlLang={lang}
  langDir={langMeta.dir}>
  <div class="flex min-h-screen flex-col bg-white dark:bg-gray-900">
    {t("all-rights-reserved")}
    <Content />
  </div>
</Layout>
