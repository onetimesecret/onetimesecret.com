---
// src/pages/[lang]/about.astro - Simplified approach
import { getCollection } from "astro:content";
import MarkdownLayout from "@/layouts/MarkdownLayout.astro";
import { getLanguagePaths, type SupportedLanguage } from "@/i18n";
import { DEFAULT_LANGUAGE, LANGUAGE_META } from "@config/astro/i18n";

export async function getStaticPaths() {
  return getLanguagePaths();
}

const { lang = DEFAULT_LANGUAGE } = Astro.params as { lang: SupportedLanguage };
const langMeta = LANGUAGE_META[lang];

// Get the page by language/slug - more idiomatic Astro approach
const allPages = await getCollection("pages");
const page = allPages.find(
  (page) =>
    page.id === `${lang}/about.md` ||
    (lang !== DEFAULT_LANGUAGE && page.id === `${DEFAULT_LANGUAGE}/about.md`),
);

if (!page) {
  throw new Error(`Page not found: ${lang}/about.md`);
}

// Render the content
const { Content, headings } = await page.render();
---

<MarkdownLayout
  title={`${page.data.title} | Onetime Secret`}
  description={page.data.description ||
    "Learn about Onetime Secret, our mission to provide secure one-time sharing, and the team behind our service."}
  htmlLang={lang}
  langDir={langMeta.dir}
  headings={headings}>
  <Content />
</MarkdownLayout>
