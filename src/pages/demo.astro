---
import Layout from "../layouts/Layout.astro";
// Import the switcher component which now handles rendering AND the selector UI
import HomepageSwitcher from "../components/HomepageSwitcher.vue";
import "../styles/global.css";
import "../styles/tailwind.css";
import "../fonts/font-face.css";
import "../i18n"; // Import i18n configuration
import { Debug } from "astro:components";

// Get the version from URL query parameter on the server. We do this simply to
// show how the Debug component can be used to inspect the server-side context.
//
// In Astro's default static (SSG) mode, this value is determined at build time
// and won't reflect runtime query parameters added by the user in their browser.
// It's primarily used here to correctly highlight the active version link below
// on the initial server render. The actual component switching logic based on
// the runtime URL parameter happens client-side within HomepageSwitcher.
const serverVersion = Astro.url.searchParams.get("version") || "1";

// Define page metadata
const title = "Onetime Secret - Share Sensitive Information Securely";
const description =
  "Generate links to secret messages that can only be viewed once. Perfect for sending passwords, API keys, or sensitive information that shouldn't be stored in email or chat logs.";
---

<Layout
  title={title}
  description={description}
>
  {
    /*
        Dynamically render HomepageAttempt1 or HomepageAttempt3 based on the 'version'
        URL query parameter (?version=...).
        The `HomepageSwitcher` Vue component handles reading the URL parameter
        client-side (`client:load`), rendering the correct homepage version,
        AND displaying the version selector UI with accurate link highlighting.
      */
  }
  <HomepageSwitcher client:load />
  <!-- This will always show "1" b/c it runs only one when the page is compiled into a static file. -->
  <!-- <Debug version={serverVersion ?? "n/a"} /> -->
  {/* The version selector div has been moved into HomepageSwitcher.vue */}
</Layout>
